buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
    }
}

allprojects {
    group = 'com.github.andrewoma'
    apply plugin: 'com.github.ben-manes.versions'

    version version

    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.ben-manes.versions'

    repositories {
        jcenter()
        mavenCentral()
    }


    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
        testCompile "org.jmockit:jmockit:1.45"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation 'org.amshove.kluent:kluent:1.34'
    }
}

subprojects {
    sourceSets {
        main {
            kotlin {
                srcDir "src/main/kotlin"
            }
            resources {
                srcDir "src/main/resources"
            }
        }
        test {
            kotlin {
                srcDir "src/test/kotlin"
            }
            resources {
                srcDir "src/test/resources"
            }
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    test {
        useJUnitPlatform {
            excludeTags 'slow'
            includeEngines 'junit-jupiter'
        }

        testLogging {
            events "failed"
            exceptionFormat "full"
        }

        failFast = false

        doFirst {
            def jMockit = configurations.testCompile.find {
                it.name.startsWith("jmockit-")
            }
            jvmArgs "-javaagent:${jMockit}"
        }
    }
}

